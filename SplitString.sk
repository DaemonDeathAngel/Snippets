expression split %string% [at] every %number% word[s]:
	return type: text
	get:
		set {_string::*} to expression-1 split at " "
		remove "" from {_string::*}
		loop {_string::*}:
			add 1 to {_a}
			if {_a} is not expression-2:
				set {_t} to concat loop-value-1," "
				add {_t} to {_c::*}
			else:
				add loop-value-1 to {_c::*}
				set {_string} to concat {_c::*}, "%nl%&r&7"
				add {_string} to {_s::*}
				set {_length} to length of {_string}
				add {_length} to {_l::*}
				delete {_c::*}
				set {_a} to 0
		set {_length} to sum({_l::*})
		if {_length} is not length of {_string}:
			set {_string} to concat {_c::*}
			add {_string} to {_s::*}
		set {_tn} to 0
		loop size of {_s::*} times:
			add 1 to {_tn}
			set {_out} to concat {_out}, {_s::%{_tn}%}
		return {_out}

command /split <text>:
	trigger:
		set {_split::*} to split arg-1 at every 9 words
		broadcast "Result: %{_split::*}%"	
